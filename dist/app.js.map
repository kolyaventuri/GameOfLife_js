{"version":3,"sources":["../lib/game.js"],"names":["Cell","require","Game","width","height","Array","grid","y","x","status","Math","round","random","cellX","cellY","numNeighbors","neighbors","module","exports"],"mappings":";;;;;;AAAA,IAAIA,OAAOC,QAAQ,QAAR,CAAX;;IAEMC,I;AACJ,gBAAYC,KAAZ,EAAmBC,MAAnB,EAA2B;AAAA;;AACzB,QAAGD,iBAAiBE,KAApB,EAA2B;AACzB,WAAKC,IAAL,GAAYH,KAAZ;AACA;AACD;AACD,SAAKG,IAAL,GAAY,IAAID,KAAJ,CAAUD,MAAV,CAAZ;;AAEA,SAAI,IAAIG,IAAI,CAAZ,EAAeA,IAAIH,MAAnB,EAA2BG,GAA3B,EAAgC;AAC9B,WAAKD,IAAL,CAAUC,CAAV,IAAe,IAAIF,KAAJ,CAAUF,KAAV,CAAf;;AAEA,WAAI,IAAIK,IAAI,CAAZ,EAAeA,IAAIL,KAAnB,EAA0BK,GAA1B,EAA+B;AAC7B,YAAIC,SAAS,CAACC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,EAAX,CAAd;AACA,aAAKN,IAAL,CAAUC,CAAV,EAAaC,CAAb,IAAkB,IAAIR,IAAJ,CAASS,MAAT,CAAlB;AACD;AACF;AACF;;;;8BAESI,K,EAAOC,K,EAAO;AACtB,UAAIC,eAAe,CAAnB;;AAEA,WAAI,IAAIR,IAAIO,QAAQ,CAApB,EAAuBP,KAAKO,QAAQ,CAApC,EAAuCP,GAAvC,EAA4C;AAC1C,YAAG,OAAO,KAAKD,IAAL,CAAUC,CAAV,CAAP,IAAuB,WAA1B,EAAuC;AACvC,aAAK,IAAIC,IAAIK,QAAQ,CAArB,EAAwBL,KAAKK,QAAQ,CAArC,EAAwCL,GAAxC,EAA6C;AAC3C,cAAGD,KAAKO,KAAL,IAAcN,KAAKK,KAAtB,EAA6B;AAC7B,cAAI,KAAKP,IAAL,CAAUC,CAAV,EAAaC,CAAb,MAAoB,CAAxB,EAA2B;AACzBO;AACD;AACF;AACF;;AAED,aAAOA,YAAP;AACD;;;6BAEQF,K,EAAOC,K,EAAO;AACrB,UAAIE,YAAY,KAAKA,SAAL,CAAeH,KAAf,EAAsBC,KAAtB,CAAhB;AACA,aAAQE,aAAa,CAAb,IAAkBA,aAAa,CAAvC;AACD;;;kCAEaH,K,EAAOC,K,EAAO;AAC1B,UAAIE,YAAY,KAAKA,SAAL,CAAeH,KAAf,EAAsBC,KAAtB,CAAhB;AACA,aAAOE,aAAa,CAApB;AACD;;;;;;AAGHC,OAAOC,OAAP,GAAiBhB,IAAjB","file":"app.js","sourcesContent":["let Cell = require('./cell');\n\nclass Game {\n  constructor(width, height) {\n    if(width instanceof Array) {\n      this.grid = width;\n      return;\n    }\n    this.grid = new Array(height);\n\n    for(let y = 0; y < height; y++) {\n      this.grid[y] = new Array(width);\n\n      for(let x = 0; x < width; x++) {\n        let status = !Math.round(Math.random());\n        this.grid[y][x] = new Cell(status);\n      }\n    }\n  }\n\n  neighbors(cellX, cellY) {\n    let numNeighbors = 0;\n\n    for(let y = cellY - 1; y <= cellY + 1; y++) {\n      if(typeof this.grid[y] == 'undefined') continue;\n      for (let x = cellX - 1; x <= cellX + 1; x++) {\n        if(y == cellY && x == cellX) continue;\n        if (this.grid[y][x] === 1) {\n          numNeighbors++;\n        }\n      }\n    }\n\n    return numNeighbors;\n  }\n\n  willLive(cellX, cellY) {\n    let neighbors = this.neighbors(cellX, cellY);\n    return (neighbors == 2 || neighbors == 3);\n  }\n\n  willReproduce(cellX, cellY) {\n    let neighbors = this.neighbors(cellX, cellY);\n    return neighbors == 3;\n  }\n}\n\nmodule.exports = Game;"]}